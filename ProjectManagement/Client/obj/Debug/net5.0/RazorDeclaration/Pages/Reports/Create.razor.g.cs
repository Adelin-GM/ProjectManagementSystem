// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ProjectManagement.Client.Pages.Reports
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\Pages\Reports\Create.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/reports/create/{Id:guid}")]
    public partial class Create : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 29 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\Pages\Reports\Create.razor"
       
    [Parameter]
    public Guid Id { get; set; }
    public Project Project { get; set; } = new Project();
    private List<Ticket> tickets;
    UserTicket[] userTickets;
    List<string> reportList { get; set; } = new List<string>();



    protected override async Task OnInitializedAsync()
    {
        await GetProject();
        await GetTickets();
        await CreateReportList();

    }

    private async Task GetProject()
    {
        try
        {
            Project = await Http.GetFromJsonAsync<Project>($"/api/projects/{Id}");
        }
        catch (Exception)
        {
        }

    }

    private async Task GetTickets()
    {
        try
        {
            tickets = await Http.GetFromJsonAsync<List<Ticket>>("api/Tickets");

        }
        catch (Exception)
        {
        }

    }

    private async Task CreateReportList()
    {
        if (tickets != null)
        {
            foreach (var ticket in tickets)
            {
                if (ticket.ProjectId == Project.Id)
                {
                    await UpdateUserTickets(ticket);
                    foreach (var userTicket in userTickets)
                    {
                        if (ticket.State == "Todo")
                        {
                            reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on {userTicket.AssignedDate.ToString()}, and has not yet started progressing");
                        }
                        else if (ticket.State == "Progress")
                        {
                            if (userTicket.StartedDate == new DateTime())
                            {
                                reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on {userTicket.AssignedDate.ToString()}, and is currently in progress with the ticket");
                            }
                            else
                            {
                                reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on" +
                                $" {userTicket.AssignedDate.ToString()}, and is progressing since {userTicket.StartedDate}");
                            }
                        }
                        else
                        {
                            if (userTicket.FinishedDate == new DateTime())
                            {
                                reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on {userTicket.AssignedDate.ToString()}, and is currently in finished with the ticket");
                            }
                            else if (userTicket.StartedDate == new DateTime() && userTicket.FinishedDate != new DateTime())
                            {
                                reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on {userTicket.AssignedDate.ToString()}, and finished with the ticket on {userTicket.FinishedDate}");
                            }
                            else
                            {
                                reportList.Add($"{userTicket.UserName} was assigned to ticket {ticket.Name} on" +
                                $" {userTicket.AssignedDate.ToString()}, started progressing on {userTicket.StartedDate}, and finished on {userTicket.FinishedDate}");
                            }
                        }
                    }
                }
            }
        }
    }

    public async Task UpdateUserTickets(Ticket ticket)
    {
        try
        {
            userTickets = await Http.GetFromJsonAsync<UserTicket[]>($"/api/UserTicket/{ticket.Id}");
        }
        catch (Exception)
        {
        }
    }

    private void NavigateToReport()
    {
        Navigation.NavigateTo($"/tickets/{Project.Id}");
    }

    private async void SaveReport()
    {
        Report report = new Report();
        report.Name =  $"{Project.Name} report";
        report.ProjectId = Project.Id;
        report.ReportDate = DateTime.Now;
        try
        {
            var response = await Http.PostAsJsonAsync("/api/Reports", report);
            response.EnsureSuccessStatusCode();
            var content = await response.Content.ReadAsStringAsync();
            var Report = JsonConvert.DeserializeObject<Report>(content);

            foreach (var item in reportList)
            {
                Line line = new Line();
                line.Name = item;
                line.ReportId = Report.Id;
                var newResponse = await Http.PostAsJsonAsync("/api/Lines", line);
                newResponse.EnsureSuccessStatusCode();

            }
            Navigation.NavigateTo($"/reports");

        }
        catch (Exception)
        {

            throw;
        }


    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager Navigation { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
