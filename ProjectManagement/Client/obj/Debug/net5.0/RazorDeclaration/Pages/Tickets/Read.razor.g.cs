// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ProjectManagement.Client.Pages.Tickets
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using ProjectManagement.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\Pages\Tickets\Read.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/tickets/read")]
    public partial class Read : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 67 "C:\Users\adeli\OneDrive\Desktop\Uni\Year 2\Enterprise Application Development\EADCW\ProjectManagementBackup12\ProjectManagement\Client\Pages\Tickets\Read.razor"
       
    [Parameter]
    public Ticket ticket { get; set; }
    [Parameter]
    public string cardBackground { get; set; }
    bool showEdit;
    bool showDetails;
    bool showAddUser;
    UserTicket[] userTickets;

    [Parameter]
    public EventCallback<Guid> OnChanged { get; set; }


    protected override async void OnInitialized()
    {
        SetCardBackground();
        await UpdateUserTickets();

    }

    public async Task UpdateUserTickets()
    {
        try
        {
            userTickets = await Http.GetFromJsonAsync<UserTicket[]>($"/api/UserTicket/{ticket.Id}");
        }
        catch (Exception)
        {
        }
    }

    private void SetCardBackground()
    {
        if (ticket.State == "Done")
            cardBackground = "#000, #159957";                     //green
        else if (ticket.State == "Progress")
            cardBackground = "#000, #005AA7";                     //blue
        else
            cardBackground = "#000, #b20a2c";                     //black
    }

    public void ShowEdit()
    {
        if (showEdit == true)
        {
            showEdit = false;
        }
        else
        {
            showDetails = false;
            showAddUser = false;
            showEdit = true;
        }
    }

    private void ShowDetails()
    {
        if (showDetails == true)
        {
            showDetails = false;
        }
        else
        {
            showEdit = false;
            showAddUser = false;
            showDetails = true;
        }
    }

    private void ShowAddUsers()
    {
        if (showAddUser == true)
        {
            showAddUser = false;
        }
        else
        {
            showDetails = false;
            showEdit = false;
            showAddUser = true;
        }
    }





    public async Task UpdateEdit()
    {
        await UpdateUserTickets();
        ticket = await Http.GetFromJsonAsync<Ticket>($"/api/Tickets/{ticket.Id}");
        showDetails = false;
        showAddUser = false;
        showEdit = false;
    }

    private async void DeleteTicket()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {ticket.Name}?");
        if (!confirmed)
            return;


        await Http.DeleteAsync($"/api/Tickets/{ticket.Id}");
        await OnChanged.InvokeAsync(ticket.Id);
    }




    private async void ChangeToRightState()
    {
        foreach (var userTicket in userTickets)         //log user progress
        {
            if (ticket.State == "Todo")
            {
                userTicket.StartedDate = DateTime.Now;
                await UpdateUserTicketInDatabase(userTicket);
            }
            else if (ticket.State == "Progress")
            {
                userTicket.FinishedDate = DateTime.Now;
                await UpdateUserTicketInDatabase(userTicket);
            }
        }

        if (ticket.State == "Todo")
        {
            ticket.State = "Progress";
        }
        else if(ticket.State == "Progress")
        {
            ticket.State = "Done";
        }
        await UpdateTicket();

    }

    private async void ChangeToLeftState()
    {
        foreach (var userTicket in userTickets)         //change user progress logs
        {
            if (ticket.State == "Done")
            {
                userTicket.FinishedDate = new DateTime();   //in the ticket is moved back the finish date will be removed
                await UpdateUserTicketInDatabase(userTicket);
            }
            else if (ticket.State == "Progress")
            {
                userTicket.StartedDate = new DateTime();   //in the ticket is moved back the started date will be removed
                await UpdateUserTicketInDatabase(userTicket);
            }
        }

        if (ticket.State == "Done")
        {
            ticket.State = "Progress";
        }
        else if (ticket.State == "Progress")
        {
            ticket.State = "Todo";
        }
        await UpdateTicket();
    }

    private async Task UpdateTicket()
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"/api/Tickets/{ticket.Id}", ticket);
            response.EnsureSuccessStatusCode();

            await OnChanged.InvokeAsync(ticket.Id);
        }
        catch (Exception e)
        {
        }
    }

    private async Task UpdateUserTicketInDatabase(UserTicket ut)
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"/api/UserTicket/{ut.Id}", ut);
            response.EnsureSuccessStatusCode();
        }
        catch (Exception e)
        {
        }
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
